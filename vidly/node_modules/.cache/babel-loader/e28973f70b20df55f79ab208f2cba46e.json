{"ast":null,"code":"var _jsxFileName = \"/Users/DeanHildebrand/Desktop/Mosh/ReactJS/vidly/src/common/Pagination.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport Genres from \"../components/genres\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = props => {\n  const {\n    itemsCount,\n    pageSize,\n    currentPage,\n    onPageChange\n  } = props; // figures out how many pages needed by dividing number of items with pages\n\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n\n  const pages = _.range(1, pagesCount + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: pages.map(page => /*#__PURE__*/_jsxDEV(\"li\", {\n        //dynamically highlights current page on click\n        className: page === currentPage ? \"page-item active\" : \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"page-link\",\n          onClick: () => onPageChange(page),\n          children: page\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}; //Verifies type of element and makes it require\n\n\n_c = Pagination;\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/DeanHildebrand/Desktop/Mosh/ReactJS/vidly/src/common/Pagination.jsx"],"names":["React","PropTypes","_","Genres","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","map","page","propTypes","number","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA,WAAxB;AAAqCC,IAAAA;AAArC,MAAsDJ,KAA5D,CAD4B,CAG5B;;AACA,QAAMK,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,UAAU,GAAGC,QAAvB,CAAnB;AACA,MAAIG,UAAU,KAAK,CAAnB,EAAsB,OAAO,IAAP;;AACtB,QAAMG,KAAK,GAAGX,CAAC,CAACY,KAAF,CAAQ,CAAR,EAAWJ,UAAU,GAAG,CAAxB,CAAd;;AAEA,sBACE;AAAA,2BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBACGG,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACT;AAEE;AACA,QAAA,SAAS,EAAEA,IAAI,KAAKR,WAAT,GAAuB,kBAAvB,GAA4C,WAHzD;AAAA,+BAKE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAyB,UAAA,OAAO,EAAE,MAAMC,YAAY,CAACO,IAAD,CAApD;AAAA,oBACGA;AADH;AAAA;AAAA;AAAA;AAAA;AALF,SACOA,IADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzBD,C,CA2BA;;;KA3BMZ,U;AA4BNA,UAAU,CAACa,SAAX,GAAuB;AACrBX,EAAAA,UAAU,EAAEL,SAAS,CAACiB,MAAV,CAAiBC,UADR;AAErBZ,EAAAA,QAAQ,EAAEN,SAAS,CAACiB,MAAV,CAAiBC,UAFN;AAGrBX,EAAAA,WAAW,EAAEP,SAAS,CAACiB,MAAV,CAAiBC,UAHT;AAIrBV,EAAAA,YAAY,EAAER,SAAS,CAACmB,IAAV,CAAeD;AAJR,CAAvB;AAOA,eAAef,UAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport Genres from \"../components/genres\";\n\nconst Pagination = (props) => {\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\n\n  // figures out how many pages needed by dividing number of items with pages\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page) => (\n          <li\n            key={page}\n            //dynamically highlights current page on click\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\n//Verifies type of element and makes it require\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}