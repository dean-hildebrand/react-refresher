{"ast":null,"code":"var _jsxFileName = \"/Users/DeanHildebrand/Desktop/Mosh/ReactJS/vidly/src/components/Movies.jsx\";\nimport React, { Component } from \"react\";\nimport Pagination from \"../common/Pagination\";\nimport Genres from \"./genres\";\nimport MoviesTable from \"./MoviesTable\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genres: [],\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      },\n      currentPage: 1,\n      pageSize: 4\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.getPagedData = () => {\n      const {\n        pageSize,\n        currentPage,\n        movies: allMovies,\n        selectedGenre,\n        sortColumn\n      } = this.state;\n      const filteredMovies = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n\n      const sorted = _.orderBy(filteredMovies, [sortColumn.path], [sortColumn.order]);\n\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filteredMovies.length,\n        data: movies\n      };\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      _id: \"\",\n      name: \"All Genres\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      sortColumn\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no movies in the database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }, this);\n    const {\n      totalCount,\n      data: movies\n    } = this.getPagedData();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(Genres, {\n          genres: this.state.genres,\n          onGenreSelect: this.handleGenreSelect,\n          selectedGenre: selectedGenre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"There are \", totalCount, \" movies in your collection\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          sortColumn: sortColumn,\n          onDelete: this.handleDelete,\n          onLike: this.handleLike,\n          onSort: this.handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: totalCount,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          onPageChange: this.handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/DeanHildebrand/Desktop/Mosh/ReactJS/vidly/src/components/Movies.jsx"],"names":["React","Component","Pagination","Genres","MoviesTable","getMovies","getGenres","paginate","_","Navbar","Movies","state","movies","genres","sortColumn","path","order","currentPage","pageSize","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","selectedGenre","handleSort","getPagedData","allMovies","filteredMovies","sorted","orderBy","totalCount","length","data","componentDidMount","name","render","count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Pagination from \"../common/Pagination\";\nimport Genres from \"./genres\";\nimport MoviesTable from \"./MoviesTable\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\n\nexport default class Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    sortColumn: { path: \"title\", order: \"asc\" },\n    currentPage: 1,\n    pageSize: 4,\n  };\n\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\n\n    this.setState({ movies: getMovies(), genres });\n  }\n\n  handleDelete = (movie) => {\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\n    this.setState({\n      movies,\n    });\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({\n      movies,\n    });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      selectedGenre,\n      sortColumn,\n    } = this.state;\n\n    const filteredMovies =\n      selectedGenre && selectedGenre._id\n        ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n        : allMovies;\n\n    const sorted = _.orderBy(\n      filteredMovies,\n      [sortColumn.path],\n      [sortColumn.order]\n    );\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filteredMovies.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, selectedGenre, sortColumn } = this.state;\n\n    if (count === 0) return <p>There are no movies in the database</p>;\n\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <Navbar />\n        <div className=\"col-3\">\n          <Genres\n            genres={this.state.genres}\n            onGenreSelect={this.handleGenreSelect}\n            selectedGenre={selectedGenre}\n          />\n        </div>\n        <div className=\"col\">\n          <h3>There are {totalCount} movies in your collection</h3>\n\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onDelete={this.handleDelete}\n            onLike={this.handleLike}\n            onSort={this.handleSort}\n          />\n\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}