{"ast":null,"code":"var _jsxFileName = \"/Users/DeanHildebrand/Desktop/Mosh/ReactJS/vidly/src/common/TableBody.jsx\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TableBody extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderCell = (item, column) => {\n      if (column.content) return column.content(item);\n      return _.get(item, column.path);\n    };\n\n    this.createKey = (item, column) => {\n      return item._id + (column.path || column.key);\n    };\n  }\n\n  render() {\n    const {\n      data,\n      columns\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: columns.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: this.renderCell(item, column)\n        }, this.createKey(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this))\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TableBody;","map":{"version":3,"sources":["/Users/DeanHildebrand/Desktop/Mosh/ReactJS/vidly/src/common/TableBody.jsx"],"names":["React","_","TableBody","Component","renderCell","item","column","content","get","path","createKey","_id","key","render","data","columns","props","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAEtCC,UAFsC,GAEzB,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC7B,UAAIA,MAAM,CAACC,OAAX,EAAoB,OAAOD,MAAM,CAACC,OAAP,CAAeF,IAAf,CAAP;AAEpB,aAAOJ,CAAC,CAACO,GAAF,CAAMH,IAAN,EAAYC,MAAM,CAACG,IAAnB,CAAP;AACD,KANqC;;AAAA,SAQtCC,SARsC,GAQ1B,CAACL,IAAD,EAAOC,MAAP,KAAkB;AAC5B,aAAOD,IAAI,CAACM,GAAL,IAAYL,MAAM,CAACG,IAAP,IAAeH,MAAM,CAACM,GAAlC,CAAP;AACD,KAVqC;AAAA;;AAYtCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoB,KAAKC,KAA/B;AACA,wBACE;AAAA,gBACGF,IAAI,CAACG,GAAL,CAAUZ,IAAD,iBACR;AAAA,kBACGU,OAAO,CAACE,GAAR,CAAaX,MAAD,iBACX;AAAA,oBAA4B,KAAKF,UAAL,CAAgBC,IAAhB,EAAsBC,MAAtB;AAA5B,WAAS,KAAKI,SAAL,EAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH,SAASL,IAAI,CAACM,GAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAzBqC;;AA4BxC,eAAeT,SAAf","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends React.Component {\n  //checks if obj has 'content' key and renders the column\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item._id}>\n            {columns.map((column) => (\n              <td key={this.createKey()}>{this.renderCell(item, column)}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n"]},"metadata":{},"sourceType":"module"}